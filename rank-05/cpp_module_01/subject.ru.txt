Название задания  : cpp01_02
Ожидаемые файлы   : Warlock.cpp Warlock.hpp
                    ASpell.hpp ASpell.cpp
				   ATarget.hpp ATarget.cpp
				   Fwoosh.hpp Fwoosh.cpp
				   Dummy.hpp Dummy.cpp
--------------------------------------------------------------------------------

В классе Warlock оператор switch ЗАПРЕЩЕН, и его использование будет
оцениваться как -42.

Создайте абстрактный класс с именем ASpell в форме Коплина, который имеет
следующие защищенные атрибуты:

* name (строка)
* effects (строка)

У обоих будут геттеры (getName и getEffects), которые возвращают строки.

Также добавьте чистый метод клонирования, который возвращает указатель на ASpell.

Все эти функции можно вызывать для константного объекта.

У ASpell есть конструктор, который берет свое имя и свои эффекты в указанном порядке.

Теперь вы создадите абстрактный класс ATarget в форме Коплиена. Он имеет тип
атрибут, который является строкой, и связанный с ним геттер, getType, который возвращает
ссылку на константную строку.

Во многом так же, как и в ASpell, у него есть чистый метод clone().

Все эти функции можно вызывать для константного объекта.

У него есть конструктор, который принимает его тип.

Теперь добавьте в ATarget функцию getHitBySpell, которая получает ссылку на
постоянный ASpell.

Он будет отображать:

<ТИП> был <ЭФФЕКТЫ>!

<ТИП> — тип ATarget, а <ЭФФЕКТЫ> — возвращаемое значение ASpell
функцией getEffects.

Наконец, добавьте в свой класс ASpell функцию launch, которая принимает ссылку на
постоянный ATarget.

Этот просто вызовет getHitBySpell переданного объекта, передав
текущий экземпляр в качестве параметра.

Когда все это будет сделано, создайте реализацию ASpell с именем Fwoosh. Его
конструктор по умолчанию установит имя «Fwoosh» и эффекты для
"fwooshed". Вы, конечно, реализуете метод clone(). В случае
Fwoosh, он вернет указатель на новый объект Fwoosh.

Таким же образом создайте конкретный объект ATarget с именем Dummy, тип которого
это «Target Practice Dummy». Вы также должны реализовать его метод clone().

Добавьте в Warlock следующие функции-члены:

* learnSpell, берет указатель на ASpell, что заставляет Warlock выучить заклинание
* forgetSpell, берет строку, соответствующую имени Spell, и заставляет Warlock забыть ее.
          Если это не известное заклинание, ничего не делает.
* launchSpell, принимает строку (имя заклинания) и ссылку на ATarget,
              который запускает заклинание на выбранную цель.
              Если это не известное заклинание, ничего не делает.

Вам понадобится новый атрибут для хранения заклинаний, которые знает ваш Warlock. Несколько
типы соответствуют всем требованиям, вам решать, чтобы выбрать лучший.

Ниже приведен возможный основной тест и его ожидаемый результат:

int main()
{
  Warlock richard("Richard", "the Titled");

  Dummy bob;
  Fwoosh* fwoosh = new Fwoosh();

  richard.learnSpell(fwoosh);

  richard.introduce();
  richard.launchSpell("Fwoosh", bob);

  richard.forgetSpell("Fwoosh");
  richard.launchSpell("Fwoosh", bob);
}

~$ ./a.out | cat -e
Richard: This looks like another boring day.$
Richard: I am Richard, the Titled!$
Target Practice Dummy has been fwooshed!$
Richard: My job here is done!$
